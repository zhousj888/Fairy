Terminals which are not used

   T_Int
   T_Void
   T_Return
   T_Print
   T_ReadInt
   T_Le
   T_Ge
   T_Eq
   T_Ne
   T_And
   T_Or
   T_StringConstant
   '<'
   '>'
   '+'
   '-'
   '*'
   '/'
   '%'
   '!'


Rules never reduced

    2 Program: Stmt


State 12 conflicts: 2 reduce/reduce
State 38 conflicts: 1 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: /* empty */
    2        | Stmt
    3        | Stmt Program

    4 Stmt: T_EOS
    5     | VarDecl
    6     | FuncDecl
    7     | AssignStmt
    8     | Expr
    9     | IfStmt
   10     | WhileStmt
   11     | BreakStmt
   12     | ContinueStmt

   13 Closure: '{' Program '}'

   14 Args: /* empty */
   15     | Arg ',' Args

   16 Arg: T_Identifier
   17    | Arg '=' Expr

   18 FuncDecl: T_Func T_Identifier '(' Args ')' Closure

   19 BreakStmt: T_Break

   20 ContinueStmt: T_Continue

   21 WhileStmt: T_While Expr Closure

   22 IfStmt: T_If Expr Closure
   23       | IfStmt T_Else Closure
   24       | IfStmt T_Else IfStmt

   25 VarDecl: T_Var T_Identifier
   26        | T_Let T_Identifier
   27        | VarDecl '=' Expr

   28 AssignStmt: T_Identifier '=' Expr

   29 Expr: T_IntConstant
   30     | T_Identifier


Terminals, with rules where they appear

$end (0) 0
'!' (33)
'%' (37)
'(' (40) 18
')' (41) 18
'*' (42)
'+' (43)
',' (44) 15
'-' (45)
'/' (47)
'<' (60)
'=' (61) 17 27 28
'>' (62)
'{' (123) 13
'}' (125) 13
error (256)
T_Int (258)
T_Var (259) 25
T_Void (260)
T_Return (261)
T_Print (262)
T_ReadInt (263)
T_While (264) 21
T_EOS (265) 4
T_Let (266) 26
T_Func (267) 18
T_If (268) 22
T_Else (269) 23 24
T_Break (270) 19
T_Continue (271) 20
T_Le (272)
T_Ge (273)
T_Eq (274)
T_Ne (275)
T_And (276)
T_Or (277)
T_IntConstant (278) 29
T_StringConstant (279)
T_Identifier (280) 16 18 25 26 28 30


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
Program (41)
    on left: 1 2 3, on right: 0 3 13
Stmt (42)
    on left: 4 5 6 7 8 9 10 11 12, on right: 2 3
Closure (43)
    on left: 13, on right: 18 21 22 23
Args (44)
    on left: 14 15, on right: 15 18
Arg (45)
    on left: 16 17, on right: 15 17
FuncDecl (46)
    on left: 18, on right: 6
BreakStmt (47)
    on left: 19, on right: 11
ContinueStmt (48)
    on left: 20, on right: 12
WhileStmt (49)
    on left: 21, on right: 10
IfStmt (50)
    on left: 22 23 24, on right: 9 23 24
VarDecl (51)
    on left: 25 26 27, on right: 5 27
AssignStmt (52)
    on left: 28, on right: 7
Expr (53)
    on left: 29 30, on right: 8 17 21 22 27 28


state 0

    0 $accept: . Program $end

    T_Var          shift, and go to state 1
    T_While        shift, and go to state 2
    T_EOS          shift, and go to state 3
    T_Let          shift, and go to state 4
    T_Func         shift, and go to state 5
    T_If           shift, and go to state 6
    T_Break        shift, and go to state 7
    T_Continue     shift, and go to state 8
    T_IntConstant  shift, and go to state 9
    T_Identifier   shift, and go to state 10

    $default  reduce using rule 1 (Program)

    Program       go to state 11
    Stmt          go to state 12
    FuncDecl      go to state 13
    BreakStmt     go to state 14
    ContinueStmt  go to state 15
    WhileStmt     go to state 16
    IfStmt        go to state 17
    VarDecl       go to state 18
    AssignStmt    go to state 19
    Expr          go to state 20


state 1

   25 VarDecl: T_Var . T_Identifier

    T_Identifier  shift, and go to state 21


state 2

   21 WhileStmt: T_While . Expr Closure

    T_IntConstant  shift, and go to state 9
    T_Identifier   shift, and go to state 22

    Expr  go to state 23


state 3

    4 Stmt: T_EOS .

    $default  reduce using rule 4 (Stmt)


state 4

   26 VarDecl: T_Let . T_Identifier

    T_Identifier  shift, and go to state 24


state 5

   18 FuncDecl: T_Func . T_Identifier '(' Args ')' Closure

    T_Identifier  shift, and go to state 25


state 6

   22 IfStmt: T_If . Expr Closure

    T_IntConstant  shift, and go to state 9
    T_Identifier   shift, and go to state 22

    Expr  go to state 26


state 7

   19 BreakStmt: T_Break .

    $default  reduce using rule 19 (BreakStmt)


state 8

   20 ContinueStmt: T_Continue .

    $default  reduce using rule 20 (ContinueStmt)


state 9

   29 Expr: T_IntConstant .

    $default  reduce using rule 29 (Expr)


state 10

   28 AssignStmt: T_Identifier . '=' Expr
   30 Expr: T_Identifier .

    '='  shift, and go to state 27

    $default  reduce using rule 30 (Expr)


state 11

    0 $accept: Program . $end

    $end  shift, and go to state 28


state 12

    2 Program: Stmt .
    3        | Stmt . Program

    T_Var          shift, and go to state 1
    T_While        shift, and go to state 2
    T_EOS          shift, and go to state 3
    T_Let          shift, and go to state 4
    T_Func         shift, and go to state 5
    T_If           shift, and go to state 6
    T_Break        shift, and go to state 7
    T_Continue     shift, and go to state 8
    T_IntConstant  shift, and go to state 9
    T_Identifier   shift, and go to state 10

    $end      reduce using rule 1 (Program)
    $end      [reduce using rule 2 (Program)]
    '}'       reduce using rule 1 (Program)
    '}'       [reduce using rule 2 (Program)]
    $default  reduce using rule 1 (Program)

    Program       go to state 29
    Stmt          go to state 12
    FuncDecl      go to state 13
    BreakStmt     go to state 14
    ContinueStmt  go to state 15
    WhileStmt     go to state 16
    IfStmt        go to state 17
    VarDecl       go to state 18
    AssignStmt    go to state 19
    Expr          go to state 20


state 13

    6 Stmt: FuncDecl .

    $default  reduce using rule 6 (Stmt)


state 14

   11 Stmt: BreakStmt .

    $default  reduce using rule 11 (Stmt)


state 15

   12 Stmt: ContinueStmt .

    $default  reduce using rule 12 (Stmt)


state 16

   10 Stmt: WhileStmt .

    $default  reduce using rule 10 (Stmt)


state 17

    9 Stmt: IfStmt .
   23 IfStmt: IfStmt . T_Else Closure
   24       | IfStmt . T_Else IfStmt

    T_Else  shift, and go to state 30

    $default  reduce using rule 9 (Stmt)


state 18

    5 Stmt: VarDecl .
   27 VarDecl: VarDecl . '=' Expr

    '='  shift, and go to state 31

    $default  reduce using rule 5 (Stmt)


state 19

    7 Stmt: AssignStmt .

    $default  reduce using rule 7 (Stmt)


state 20

    8 Stmt: Expr .

    $default  reduce using rule 8 (Stmt)


state 21

   25 VarDecl: T_Var T_Identifier .

    $default  reduce using rule 25 (VarDecl)


state 22

   30 Expr: T_Identifier .

    $default  reduce using rule 30 (Expr)


state 23

   21 WhileStmt: T_While Expr . Closure

    '{'  shift, and go to state 32

    Closure  go to state 33


state 24

   26 VarDecl: T_Let T_Identifier .

    $default  reduce using rule 26 (VarDecl)


state 25

   18 FuncDecl: T_Func T_Identifier . '(' Args ')' Closure

    '('  shift, and go to state 34


state 26

   22 IfStmt: T_If Expr . Closure

    '{'  shift, and go to state 32

    Closure  go to state 35


state 27

   28 AssignStmt: T_Identifier '=' . Expr

    T_IntConstant  shift, and go to state 9
    T_Identifier   shift, and go to state 22

    Expr  go to state 36


state 28

    0 $accept: Program $end .

    $default  accept


state 29

    3 Program: Stmt Program .

    $default  reduce using rule 3 (Program)


state 30

   23 IfStmt: IfStmt T_Else . Closure
   24       | IfStmt T_Else . IfStmt

    T_If  shift, and go to state 6
    '{'   shift, and go to state 32

    Closure  go to state 37
    IfStmt   go to state 38


state 31

   27 VarDecl: VarDecl '=' . Expr

    T_IntConstant  shift, and go to state 9
    T_Identifier   shift, and go to state 22

    Expr  go to state 39


state 32

   13 Closure: '{' . Program '}'

    T_Var          shift, and go to state 1
    T_While        shift, and go to state 2
    T_EOS          shift, and go to state 3
    T_Let          shift, and go to state 4
    T_Func         shift, and go to state 5
    T_If           shift, and go to state 6
    T_Break        shift, and go to state 7
    T_Continue     shift, and go to state 8
    T_IntConstant  shift, and go to state 9
    T_Identifier   shift, and go to state 10

    $default  reduce using rule 1 (Program)

    Program       go to state 40
    Stmt          go to state 12
    FuncDecl      go to state 13
    BreakStmt     go to state 14
    ContinueStmt  go to state 15
    WhileStmt     go to state 16
    IfStmt        go to state 17
    VarDecl       go to state 18
    AssignStmt    go to state 19
    Expr          go to state 20


state 33

   21 WhileStmt: T_While Expr Closure .

    $default  reduce using rule 21 (WhileStmt)


state 34

   18 FuncDecl: T_Func T_Identifier '(' . Args ')' Closure

    T_Identifier  shift, and go to state 41

    $default  reduce using rule 14 (Args)

    Args  go to state 42
    Arg   go to state 43


state 35

   22 IfStmt: T_If Expr Closure .

    $default  reduce using rule 22 (IfStmt)


state 36

   28 AssignStmt: T_Identifier '=' Expr .

    $default  reduce using rule 28 (AssignStmt)


state 37

   23 IfStmt: IfStmt T_Else Closure .

    $default  reduce using rule 23 (IfStmt)


state 38

   23 IfStmt: IfStmt . T_Else Closure
   24       | IfStmt . T_Else IfStmt
   24       | IfStmt T_Else IfStmt .

    T_Else  shift, and go to state 30

    T_Else    [reduce using rule 24 (IfStmt)]
    $default  reduce using rule 24 (IfStmt)


state 39

   27 VarDecl: VarDecl '=' Expr .

    $default  reduce using rule 27 (VarDecl)


state 40

   13 Closure: '{' Program . '}'

    '}'  shift, and go to state 44


state 41

   16 Arg: T_Identifier .

    $default  reduce using rule 16 (Arg)


state 42

   18 FuncDecl: T_Func T_Identifier '(' Args . ')' Closure

    ')'  shift, and go to state 45


state 43

   15 Args: Arg . ',' Args
   17 Arg: Arg . '=' Expr

    '='  shift, and go to state 46
    ','  shift, and go to state 47


state 44

   13 Closure: '{' Program '}' .

    $default  reduce using rule 13 (Closure)


state 45

   18 FuncDecl: T_Func T_Identifier '(' Args ')' . Closure

    '{'  shift, and go to state 32

    Closure  go to state 48


state 46

   17 Arg: Arg '=' . Expr

    T_IntConstant  shift, and go to state 9
    T_Identifier   shift, and go to state 22

    Expr  go to state 49


state 47

   15 Args: Arg ',' . Args

    T_Identifier  shift, and go to state 41

    $default  reduce using rule 14 (Args)

    Args  go to state 50
    Arg   go to state 43


state 48

   18 FuncDecl: T_Func T_Identifier '(' Args ')' Closure .

    $default  reduce using rule 18 (FuncDecl)


state 49

   17 Arg: Arg '=' Expr .

    $default  reduce using rule 17 (Arg)


state 50

   15 Args: Arg ',' Args .

    $default  reduce using rule 15 (Args)

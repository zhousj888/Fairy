Terminals which are not used

   T_Int
   T_Void
   T_Return
   T_Print
   T_ReadInt
   T_Le
   T_Ge
   T_Eq
   T_Ne
   T_And
   T_Or
   T_StringConstant
   '<'
   '>'
   '+'
   '*'
   '/'
   '%'


Rules never reduced

    2 Program: Stmt


State 11 conflicts: 1 shift/reduce
State 17 conflicts: 2 reduce/reduce
State 19 conflicts: 1 shift/reduce
State 20 conflicts: 17 reduce/reduce
State 32 conflicts: 1 shift/reduce
State 41 conflicts: 2 shift/reduce
State 42 conflicts: 2 shift/reduce
State 67 conflicts: 1 shift/reduce
State 69 conflicts: 2 shift/reduce
State 70 conflicts: 2 shift/reduce
State 78 conflicts: 1 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: /* empty */
    2        | Stmt
    3        | Stmt Program

    4 Stmt: StmtSeparator
    5     | VarDecl StmtSeparator
    6     | FuncDecl
    7     | AssignStmt StmtSeparator
    8     | Expr
    9     | IfStmt
   10     | WhileStmt
   11     | BreakStmt StmtSeparator
   12     | ContinueStmt StmtSeparator
   13     | CallStmt
   14     | ForStmt

   15 StmtSeparator: ';'
   16              | NewLines

   17 NewLines: T_EOL
   18         | NewLines T_EOL

   19 EmptyOrNewLines: /* empty */
   20                | NewLines

   21 Closure: '{' Program '}'

   22 EmptyOrClosure: /* empty */
   23               | Closure

   24 ActualParams: /* empty */
   25             | ActualParam
   26             | ActualParams ',' ActualParam

   27 ActualParam: Expr
   28            | T_Identifier ':' Expr

   29 CallStmt: T_Identifier '(' ActualParams ')' EmptyOrClosure

   30 ForStmt: T_For Expr T_In Expr Closure

   31 Args: /* empty */
   32     | Arg
   33     | Args ',' Arg

   34 Arg: T_Identifier
   35    | Arg '=' Expr

   36 FuncDecl: T_Func T_Identifier '(' Args ')' EmptyOrNewLines Closure

   37 BreakStmt: T_Break

   38 ContinueStmt: T_Continue

   39 WhileStmt: T_While Expr Closure

   40 IfStmt: T_If Expr Closure
   41       | IfStmt T_Else Closure
   42       | IfStmt T_Else IfStmt

   43 VarDecl: T_Var T_Identifier
   44        | T_Let T_Identifier
   45        | VarDecl '=' Expr

   46 AssignStmt: T_Identifier '=' Expr

   47 IntervalExpr: Expr T_IntervalTo Expr
   48             | Expr T_IntervalLess Expr

   49 Expr: T_IntConstant
   50     | T_Identifier
   51     | CallStmt
   52     | '(' Expr ')'
   53     | '-' Expr
   54     | '!' Expr
   55     | IntervalExpr


Terminals, with rules where they appear

$end (0) 0
'!' (33) 54
'%' (37)
'(' (40) 29 36 52
')' (41) 29 36 52
'*' (42)
'+' (43)
',' (44) 26 33
'-' (45) 53
'/' (47)
':' (58) 28
';' (59) 15
'<' (60)
'=' (61) 35 45 46
'>' (62)
'{' (123) 21
'}' (125) 21
error (256)
T_Int (258)
T_Var (259) 43
T_Void (260)
T_Return (261)
T_Print (262)
T_ReadInt (263)
T_While (264) 39
T_EOL (265) 17 18
T_Let (266) 44
T_Func (267) 36
T_For (268) 30
T_In (269) 30
T_If (270) 40
T_Else (271) 41 42
T_Break (272) 37
T_Continue (273) 38
T_Le (274)
T_Ge (275)
T_Eq (276)
T_Ne (277)
T_And (278)
T_Or (279)
T_IntConstant (280) 49
T_StringConstant (281)
T_Identifier (282) 28 29 34 36 43 44 46 50
T_IntervalTo (283) 47
T_IntervalLess (284) 48


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
Program (47)
    on left: 1 2 3, on right: 0 3 21
Stmt (48)
    on left: 4 5 6 7 8 9 10 11 12 13 14, on right: 2 3
StmtSeparator (49)
    on left: 15 16, on right: 4 5 7 11 12
NewLines (50)
    on left: 17 18, on right: 16 18 20
EmptyOrNewLines (51)
    on left: 19 20, on right: 36
Closure (52)
    on left: 21, on right: 23 30 36 39 40 41
EmptyOrClosure (53)
    on left: 22 23, on right: 29
ActualParams (54)
    on left: 24 25 26, on right: 26 29
ActualParam (55)
    on left: 27 28, on right: 25 26
CallStmt (56)
    on left: 29, on right: 13 51
ForStmt (57)
    on left: 30, on right: 14
Args (58)
    on left: 31 32 33, on right: 33 36
Arg (59)
    on left: 34 35, on right: 32 33 35
FuncDecl (60)
    on left: 36, on right: 6
BreakStmt (61)
    on left: 37, on right: 11
ContinueStmt (62)
    on left: 38, on right: 12
WhileStmt (63)
    on left: 39, on right: 10
IfStmt (64)
    on left: 40 41 42, on right: 9 41 42
VarDecl (65)
    on left: 43 44 45, on right: 5 45
AssignStmt (66)
    on left: 46, on right: 7
IntervalExpr (67)
    on left: 47 48, on right: 55
Expr (68)
    on left: 49 50 51 52 53 54 55, on right: 8 27 28 30 35 39 40 45
    46 47 48 52 53 54


state 0

    0 $accept: . Program $end

    T_Var          shift, and go to state 1
    T_While        shift, and go to state 2
    T_EOL          shift, and go to state 3
    T_Let          shift, and go to state 4
    T_Func         shift, and go to state 5
    T_For          shift, and go to state 6
    T_If           shift, and go to state 7
    T_Break        shift, and go to state 8
    T_Continue     shift, and go to state 9
    T_IntConstant  shift, and go to state 10
    T_Identifier   shift, and go to state 11
    '-'            shift, and go to state 12
    '!'            shift, and go to state 13
    ';'            shift, and go to state 14
    '('            shift, and go to state 15

    $default  reduce using rule 1 (Program)

    Program        go to state 16
    Stmt           go to state 17
    StmtSeparator  go to state 18
    NewLines       go to state 19
    CallStmt       go to state 20
    ForStmt        go to state 21
    FuncDecl       go to state 22
    BreakStmt      go to state 23
    ContinueStmt   go to state 24
    WhileStmt      go to state 25
    IfStmt         go to state 26
    VarDecl        go to state 27
    AssignStmt     go to state 28
    IntervalExpr   go to state 29
    Expr           go to state 30


state 1

   43 VarDecl: T_Var . T_Identifier

    T_Identifier  shift, and go to state 31


state 2

   39 WhileStmt: T_While . Expr Closure

    T_IntConstant  shift, and go to state 10
    T_Identifier   shift, and go to state 32
    '-'            shift, and go to state 12
    '!'            shift, and go to state 13
    '('            shift, and go to state 15

    CallStmt      go to state 33
    IntervalExpr  go to state 29
    Expr          go to state 34


state 3

   17 NewLines: T_EOL .

    $default  reduce using rule 17 (NewLines)


state 4

   44 VarDecl: T_Let . T_Identifier

    T_Identifier  shift, and go to state 35


state 5

   36 FuncDecl: T_Func . T_Identifier '(' Args ')' EmptyOrNewLines Closure

    T_Identifier  shift, and go to state 36


state 6

   30 ForStmt: T_For . Expr T_In Expr Closure

    T_IntConstant  shift, and go to state 10
    T_Identifier   shift, and go to state 32
    '-'            shift, and go to state 12
    '!'            shift, and go to state 13
    '('            shift, and go to state 15

    CallStmt      go to state 33
    IntervalExpr  go to state 29
    Expr          go to state 37


state 7

   40 IfStmt: T_If . Expr Closure

    T_IntConstant  shift, and go to state 10
    T_Identifier   shift, and go to state 32
    '-'            shift, and go to state 12
    '!'            shift, and go to state 13
    '('            shift, and go to state 15

    CallStmt      go to state 33
    IntervalExpr  go to state 29
    Expr          go to state 38


state 8

   37 BreakStmt: T_Break .

    $default  reduce using rule 37 (BreakStmt)


state 9

   38 ContinueStmt: T_Continue .

    $default  reduce using rule 38 (ContinueStmt)


state 10

   49 Expr: T_IntConstant .

    $default  reduce using rule 49 (Expr)


state 11

   29 CallStmt: T_Identifier . '(' ActualParams ')' EmptyOrClosure
   46 AssignStmt: T_Identifier . '=' Expr
   50 Expr: T_Identifier .

    '='  shift, and go to state 39
    '('  shift, and go to state 40

    '('       [reduce using rule 50 (Expr)]
    $default  reduce using rule 50 (Expr)


state 12

   53 Expr: '-' . Expr

    T_IntConstant  shift, and go to state 10
    T_Identifier   shift, and go to state 32
    '-'            shift, and go to state 12
    '!'            shift, and go to state 13
    '('            shift, and go to state 15

    CallStmt      go to state 33
    IntervalExpr  go to state 29
    Expr          go to state 41


state 13

   54 Expr: '!' . Expr

    T_IntConstant  shift, and go to state 10
    T_Identifier   shift, and go to state 32
    '-'            shift, and go to state 12
    '!'            shift, and go to state 13
    '('            shift, and go to state 15

    CallStmt      go to state 33
    IntervalExpr  go to state 29
    Expr          go to state 42


state 14

   15 StmtSeparator: ';' .

    $default  reduce using rule 15 (StmtSeparator)


state 15

   52 Expr: '(' . Expr ')'

    T_IntConstant  shift, and go to state 10
    T_Identifier   shift, and go to state 32
    '-'            shift, and go to state 12
    '!'            shift, and go to state 13
    '('            shift, and go to state 15

    CallStmt      go to state 33
    IntervalExpr  go to state 29
    Expr          go to state 43


state 16

    0 $accept: Program . $end

    $end  shift, and go to state 44


state 17

    2 Program: Stmt .
    3        | Stmt . Program

    T_Var          shift, and go to state 1
    T_While        shift, and go to state 2
    T_EOL          shift, and go to state 3
    T_Let          shift, and go to state 4
    T_Func         shift, and go to state 5
    T_For          shift, and go to state 6
    T_If           shift, and go to state 7
    T_Break        shift, and go to state 8
    T_Continue     shift, and go to state 9
    T_IntConstant  shift, and go to state 10
    T_Identifier   shift, and go to state 11
    '-'            shift, and go to state 12
    '!'            shift, and go to state 13
    ';'            shift, and go to state 14
    '('            shift, and go to state 15

    $end      reduce using rule 1 (Program)
    $end      [reduce using rule 2 (Program)]
    '}'       reduce using rule 1 (Program)
    '}'       [reduce using rule 2 (Program)]
    $default  reduce using rule 1 (Program)

    Program        go to state 45
    Stmt           go to state 17
    StmtSeparator  go to state 18
    NewLines       go to state 19
    CallStmt       go to state 20
    ForStmt        go to state 21
    FuncDecl       go to state 22
    BreakStmt      go to state 23
    ContinueStmt   go to state 24
    WhileStmt      go to state 25
    IfStmt         go to state 26
    VarDecl        go to state 27
    AssignStmt     go to state 28
    IntervalExpr   go to state 29
    Expr           go to state 30


state 18

    4 Stmt: StmtSeparator .

    $default  reduce using rule 4 (Stmt)


state 19

   16 StmtSeparator: NewLines .
   18 NewLines: NewLines . T_EOL

    T_EOL  shift, and go to state 46

    T_EOL     [reduce using rule 16 (StmtSeparator)]
    $default  reduce using rule 16 (StmtSeparator)


state 20

   13 Stmt: CallStmt .
   51 Expr: CallStmt .

    $end            reduce using rule 13 (Stmt)
    $end            [reduce using rule 51 (Expr)]
    T_Var           reduce using rule 13 (Stmt)
    T_Var           [reduce using rule 51 (Expr)]
    T_While         reduce using rule 13 (Stmt)
    T_While         [reduce using rule 51 (Expr)]
    T_EOL           reduce using rule 13 (Stmt)
    T_EOL           [reduce using rule 51 (Expr)]
    T_Let           reduce using rule 13 (Stmt)
    T_Let           [reduce using rule 51 (Expr)]
    T_Func          reduce using rule 13 (Stmt)
    T_Func          [reduce using rule 51 (Expr)]
    T_For           reduce using rule 13 (Stmt)
    T_For           [reduce using rule 51 (Expr)]
    T_If            reduce using rule 13 (Stmt)
    T_If            [reduce using rule 51 (Expr)]
    T_Break         reduce using rule 13 (Stmt)
    T_Break         [reduce using rule 51 (Expr)]
    T_Continue      reduce using rule 13 (Stmt)
    T_Continue      [reduce using rule 51 (Expr)]
    T_IntConstant   reduce using rule 13 (Stmt)
    T_IntConstant   [reduce using rule 51 (Expr)]
    T_Identifier    reduce using rule 13 (Stmt)
    T_Identifier    [reduce using rule 51 (Expr)]
    T_IntervalTo    reduce using rule 51 (Expr)
    T_IntervalLess  reduce using rule 51 (Expr)
    '-'             reduce using rule 13 (Stmt)
    '-'             [reduce using rule 51 (Expr)]
    '!'             reduce using rule 13 (Stmt)
    '!'             [reduce using rule 51 (Expr)]
    ';'             reduce using rule 13 (Stmt)
    ';'             [reduce using rule 51 (Expr)]
    '}'             reduce using rule 13 (Stmt)
    '}'             [reduce using rule 51 (Expr)]
    '('             reduce using rule 13 (Stmt)
    '('             [reduce using rule 51 (Expr)]
    $default        reduce using rule 13 (Stmt)


state 21

   14 Stmt: ForStmt .

    $default  reduce using rule 14 (Stmt)


state 22

    6 Stmt: FuncDecl .

    $default  reduce using rule 6 (Stmt)


state 23

   11 Stmt: BreakStmt . StmtSeparator

    T_EOL  shift, and go to state 3
    ';'    shift, and go to state 14

    StmtSeparator  go to state 47
    NewLines       go to state 19


state 24

   12 Stmt: ContinueStmt . StmtSeparator

    T_EOL  shift, and go to state 3
    ';'    shift, and go to state 14

    StmtSeparator  go to state 48
    NewLines       go to state 19


state 25

   10 Stmt: WhileStmt .

    $default  reduce using rule 10 (Stmt)


state 26

    9 Stmt: IfStmt .
   41 IfStmt: IfStmt . T_Else Closure
   42       | IfStmt . T_Else IfStmt

    T_Else  shift, and go to state 49

    $default  reduce using rule 9 (Stmt)


state 27

    5 Stmt: VarDecl . StmtSeparator
   45 VarDecl: VarDecl . '=' Expr

    T_EOL  shift, and go to state 3
    '='    shift, and go to state 50
    ';'    shift, and go to state 14

    StmtSeparator  go to state 51
    NewLines       go to state 19


state 28

    7 Stmt: AssignStmt . StmtSeparator

    T_EOL  shift, and go to state 3
    ';'    shift, and go to state 14

    StmtSeparator  go to state 52
    NewLines       go to state 19


state 29

   55 Expr: IntervalExpr .

    $default  reduce using rule 55 (Expr)


state 30

    8 Stmt: Expr .
   47 IntervalExpr: Expr . T_IntervalTo Expr
   48             | Expr . T_IntervalLess Expr

    T_IntervalTo    shift, and go to state 53
    T_IntervalLess  shift, and go to state 54

    $default  reduce using rule 8 (Stmt)


state 31

   43 VarDecl: T_Var T_Identifier .

    $default  reduce using rule 43 (VarDecl)


state 32

   29 CallStmt: T_Identifier . '(' ActualParams ')' EmptyOrClosure
   50 Expr: T_Identifier .

    '('  shift, and go to state 40

    '('       [reduce using rule 50 (Expr)]
    $default  reduce using rule 50 (Expr)


state 33

   51 Expr: CallStmt .

    $default  reduce using rule 51 (Expr)


state 34

   39 WhileStmt: T_While Expr . Closure
   47 IntervalExpr: Expr . T_IntervalTo Expr
   48             | Expr . T_IntervalLess Expr

    T_IntervalTo    shift, and go to state 53
    T_IntervalLess  shift, and go to state 54
    '{'             shift, and go to state 55

    Closure  go to state 56


state 35

   44 VarDecl: T_Let T_Identifier .

    $default  reduce using rule 44 (VarDecl)


state 36

   36 FuncDecl: T_Func T_Identifier . '(' Args ')' EmptyOrNewLines Closure

    '('  shift, and go to state 57


state 37

   30 ForStmt: T_For Expr . T_In Expr Closure
   47 IntervalExpr: Expr . T_IntervalTo Expr
   48             | Expr . T_IntervalLess Expr

    T_In            shift, and go to state 58
    T_IntervalTo    shift, and go to state 53
    T_IntervalLess  shift, and go to state 54


state 38

   40 IfStmt: T_If Expr . Closure
   47 IntervalExpr: Expr . T_IntervalTo Expr
   48             | Expr . T_IntervalLess Expr

    T_IntervalTo    shift, and go to state 53
    T_IntervalLess  shift, and go to state 54
    '{'             shift, and go to state 55

    Closure  go to state 59


state 39

   46 AssignStmt: T_Identifier '=' . Expr

    T_IntConstant  shift, and go to state 10
    T_Identifier   shift, and go to state 32
    '-'            shift, and go to state 12
    '!'            shift, and go to state 13
    '('            shift, and go to state 15

    CallStmt      go to state 33
    IntervalExpr  go to state 29
    Expr          go to state 60


state 40

   29 CallStmt: T_Identifier '(' . ActualParams ')' EmptyOrClosure

    T_IntConstant  shift, and go to state 10
    T_Identifier   shift, and go to state 61
    '-'            shift, and go to state 12
    '!'            shift, and go to state 13
    '('            shift, and go to state 15

    $default  reduce using rule 24 (ActualParams)

    ActualParams  go to state 62
    ActualParam   go to state 63
    CallStmt      go to state 33
    IntervalExpr  go to state 29
    Expr          go to state 64


state 41

   47 IntervalExpr: Expr . T_IntervalTo Expr
   48             | Expr . T_IntervalLess Expr
   53 Expr: '-' Expr .

    T_IntervalTo    shift, and go to state 53
    T_IntervalLess  shift, and go to state 54

    T_IntervalTo    [reduce using rule 53 (Expr)]
    T_IntervalLess  [reduce using rule 53 (Expr)]
    $default        reduce using rule 53 (Expr)


state 42

   47 IntervalExpr: Expr . T_IntervalTo Expr
   48             | Expr . T_IntervalLess Expr
   54 Expr: '!' Expr .

    T_IntervalTo    shift, and go to state 53
    T_IntervalLess  shift, and go to state 54

    T_IntervalTo    [reduce using rule 54 (Expr)]
    T_IntervalLess  [reduce using rule 54 (Expr)]
    $default        reduce using rule 54 (Expr)


state 43

   47 IntervalExpr: Expr . T_IntervalTo Expr
   48             | Expr . T_IntervalLess Expr
   52 Expr: '(' Expr . ')'

    T_IntervalTo    shift, and go to state 53
    T_IntervalLess  shift, and go to state 54
    ')'             shift, and go to state 65


state 44

    0 $accept: Program $end .

    $default  accept


state 45

    3 Program: Stmt Program .

    $default  reduce using rule 3 (Program)


state 46

   18 NewLines: NewLines T_EOL .

    $default  reduce using rule 18 (NewLines)


state 47

   11 Stmt: BreakStmt StmtSeparator .

    $default  reduce using rule 11 (Stmt)


state 48

   12 Stmt: ContinueStmt StmtSeparator .

    $default  reduce using rule 12 (Stmt)


state 49

   41 IfStmt: IfStmt T_Else . Closure
   42       | IfStmt T_Else . IfStmt

    T_If  shift, and go to state 7
    '{'   shift, and go to state 55

    Closure  go to state 66
    IfStmt   go to state 67


state 50

   45 VarDecl: VarDecl '=' . Expr

    T_IntConstant  shift, and go to state 10
    T_Identifier   shift, and go to state 32
    '-'            shift, and go to state 12
    '!'            shift, and go to state 13
    '('            shift, and go to state 15

    CallStmt      go to state 33
    IntervalExpr  go to state 29
    Expr          go to state 68


state 51

    5 Stmt: VarDecl StmtSeparator .

    $default  reduce using rule 5 (Stmt)


state 52

    7 Stmt: AssignStmt StmtSeparator .

    $default  reduce using rule 7 (Stmt)


state 53

   47 IntervalExpr: Expr T_IntervalTo . Expr

    T_IntConstant  shift, and go to state 10
    T_Identifier   shift, and go to state 32
    '-'            shift, and go to state 12
    '!'            shift, and go to state 13
    '('            shift, and go to state 15

    CallStmt      go to state 33
    IntervalExpr  go to state 29
    Expr          go to state 69


state 54

   48 IntervalExpr: Expr T_IntervalLess . Expr

    T_IntConstant  shift, and go to state 10
    T_Identifier   shift, and go to state 32
    '-'            shift, and go to state 12
    '!'            shift, and go to state 13
    '('            shift, and go to state 15

    CallStmt      go to state 33
    IntervalExpr  go to state 29
    Expr          go to state 70


state 55

   21 Closure: '{' . Program '}'

    T_Var          shift, and go to state 1
    T_While        shift, and go to state 2
    T_EOL          shift, and go to state 3
    T_Let          shift, and go to state 4
    T_Func         shift, and go to state 5
    T_For          shift, and go to state 6
    T_If           shift, and go to state 7
    T_Break        shift, and go to state 8
    T_Continue     shift, and go to state 9
    T_IntConstant  shift, and go to state 10
    T_Identifier   shift, and go to state 11
    '-'            shift, and go to state 12
    '!'            shift, and go to state 13
    ';'            shift, and go to state 14
    '('            shift, and go to state 15

    $default  reduce using rule 1 (Program)

    Program        go to state 71
    Stmt           go to state 17
    StmtSeparator  go to state 18
    NewLines       go to state 19
    CallStmt       go to state 20
    ForStmt        go to state 21
    FuncDecl       go to state 22
    BreakStmt      go to state 23
    ContinueStmt   go to state 24
    WhileStmt      go to state 25
    IfStmt         go to state 26
    VarDecl        go to state 27
    AssignStmt     go to state 28
    IntervalExpr   go to state 29
    Expr           go to state 30


state 56

   39 WhileStmt: T_While Expr Closure .

    $default  reduce using rule 39 (WhileStmt)


state 57

   36 FuncDecl: T_Func T_Identifier '(' . Args ')' EmptyOrNewLines Closure

    T_Identifier  shift, and go to state 72

    $default  reduce using rule 31 (Args)

    Args  go to state 73
    Arg   go to state 74


state 58

   30 ForStmt: T_For Expr T_In . Expr Closure

    T_IntConstant  shift, and go to state 10
    T_Identifier   shift, and go to state 32
    '-'            shift, and go to state 12
    '!'            shift, and go to state 13
    '('            shift, and go to state 15

    CallStmt      go to state 33
    IntervalExpr  go to state 29
    Expr          go to state 75


state 59

   40 IfStmt: T_If Expr Closure .

    $default  reduce using rule 40 (IfStmt)


state 60

   46 AssignStmt: T_Identifier '=' Expr .
   47 IntervalExpr: Expr . T_IntervalTo Expr
   48             | Expr . T_IntervalLess Expr

    T_IntervalTo    shift, and go to state 53
    T_IntervalLess  shift, and go to state 54

    $default  reduce using rule 46 (AssignStmt)


state 61

   28 ActualParam: T_Identifier . ':' Expr
   29 CallStmt: T_Identifier . '(' ActualParams ')' EmptyOrClosure
   50 Expr: T_Identifier .

    ':'  shift, and go to state 76
    '('  shift, and go to state 40

    $default  reduce using rule 50 (Expr)


state 62

   26 ActualParams: ActualParams . ',' ActualParam
   29 CallStmt: T_Identifier '(' ActualParams . ')' EmptyOrClosure

    ','  shift, and go to state 77
    ')'  shift, and go to state 78


state 63

   25 ActualParams: ActualParam .

    $default  reduce using rule 25 (ActualParams)


state 64

   27 ActualParam: Expr .
   47 IntervalExpr: Expr . T_IntervalTo Expr
   48             | Expr . T_IntervalLess Expr

    T_IntervalTo    shift, and go to state 53
    T_IntervalLess  shift, and go to state 54

    $default  reduce using rule 27 (ActualParam)


state 65

   52 Expr: '(' Expr ')' .

    $default  reduce using rule 52 (Expr)


state 66

   41 IfStmt: IfStmt T_Else Closure .

    $default  reduce using rule 41 (IfStmt)


state 67

   41 IfStmt: IfStmt . T_Else Closure
   42       | IfStmt . T_Else IfStmt
   42       | IfStmt T_Else IfStmt .

    T_Else  shift, and go to state 49

    T_Else    [reduce using rule 42 (IfStmt)]
    $default  reduce using rule 42 (IfStmt)


state 68

   45 VarDecl: VarDecl '=' Expr .
   47 IntervalExpr: Expr . T_IntervalTo Expr
   48             | Expr . T_IntervalLess Expr

    T_IntervalTo    shift, and go to state 53
    T_IntervalLess  shift, and go to state 54

    $default  reduce using rule 45 (VarDecl)


state 69

   47 IntervalExpr: Expr . T_IntervalTo Expr
   47             | Expr T_IntervalTo Expr .
   48             | Expr . T_IntervalLess Expr

    T_IntervalTo    shift, and go to state 53
    T_IntervalLess  shift, and go to state 54

    T_IntervalTo    [reduce using rule 47 (IntervalExpr)]
    T_IntervalLess  [reduce using rule 47 (IntervalExpr)]
    $default        reduce using rule 47 (IntervalExpr)


state 70

   47 IntervalExpr: Expr . T_IntervalTo Expr
   48             | Expr . T_IntervalLess Expr
   48             | Expr T_IntervalLess Expr .

    T_IntervalTo    shift, and go to state 53
    T_IntervalLess  shift, and go to state 54

    T_IntervalTo    [reduce using rule 48 (IntervalExpr)]
    T_IntervalLess  [reduce using rule 48 (IntervalExpr)]
    $default        reduce using rule 48 (IntervalExpr)


state 71

   21 Closure: '{' Program . '}'

    '}'  shift, and go to state 79


state 72

   34 Arg: T_Identifier .

    $default  reduce using rule 34 (Arg)


state 73

   33 Args: Args . ',' Arg
   36 FuncDecl: T_Func T_Identifier '(' Args . ')' EmptyOrNewLines Closure

    ','  shift, and go to state 80
    ')'  shift, and go to state 81


state 74

   32 Args: Arg .
   35 Arg: Arg . '=' Expr

    '='  shift, and go to state 82

    $default  reduce using rule 32 (Args)


state 75

   30 ForStmt: T_For Expr T_In Expr . Closure
   47 IntervalExpr: Expr . T_IntervalTo Expr
   48             | Expr . T_IntervalLess Expr

    T_IntervalTo    shift, and go to state 53
    T_IntervalLess  shift, and go to state 54
    '{'             shift, and go to state 55

    Closure  go to state 83


state 76

   28 ActualParam: T_Identifier ':' . Expr

    T_IntConstant  shift, and go to state 10
    T_Identifier   shift, and go to state 32
    '-'            shift, and go to state 12
    '!'            shift, and go to state 13
    '('            shift, and go to state 15

    CallStmt      go to state 33
    IntervalExpr  go to state 29
    Expr          go to state 84


state 77

   26 ActualParams: ActualParams ',' . ActualParam

    T_IntConstant  shift, and go to state 10
    T_Identifier   shift, and go to state 61
    '-'            shift, and go to state 12
    '!'            shift, and go to state 13
    '('            shift, and go to state 15

    ActualParam   go to state 85
    CallStmt      go to state 33
    IntervalExpr  go to state 29
    Expr          go to state 64


state 78

   29 CallStmt: T_Identifier '(' ActualParams ')' . EmptyOrClosure

    '{'  shift, and go to state 55

    '{'       [reduce using rule 22 (EmptyOrClosure)]
    $default  reduce using rule 22 (EmptyOrClosure)

    Closure         go to state 86
    EmptyOrClosure  go to state 87


state 79

   21 Closure: '{' Program '}' .

    $default  reduce using rule 21 (Closure)


state 80

   33 Args: Args ',' . Arg

    T_Identifier  shift, and go to state 72

    Arg  go to state 88


state 81

   36 FuncDecl: T_Func T_Identifier '(' Args ')' . EmptyOrNewLines Closure

    T_EOL  shift, and go to state 3

    $default  reduce using rule 19 (EmptyOrNewLines)

    NewLines         go to state 89
    EmptyOrNewLines  go to state 90


state 82

   35 Arg: Arg '=' . Expr

    T_IntConstant  shift, and go to state 10
    T_Identifier   shift, and go to state 32
    '-'            shift, and go to state 12
    '!'            shift, and go to state 13
    '('            shift, and go to state 15

    CallStmt      go to state 33
    IntervalExpr  go to state 29
    Expr          go to state 91


state 83

   30 ForStmt: T_For Expr T_In Expr Closure .

    $default  reduce using rule 30 (ForStmt)


state 84

   28 ActualParam: T_Identifier ':' Expr .
   47 IntervalExpr: Expr . T_IntervalTo Expr
   48             | Expr . T_IntervalLess Expr

    T_IntervalTo    shift, and go to state 53
    T_IntervalLess  shift, and go to state 54

    $default  reduce using rule 28 (ActualParam)


state 85

   26 ActualParams: ActualParams ',' ActualParam .

    $default  reduce using rule 26 (ActualParams)


state 86

   23 EmptyOrClosure: Closure .

    $default  reduce using rule 23 (EmptyOrClosure)


state 87

   29 CallStmt: T_Identifier '(' ActualParams ')' EmptyOrClosure .

    $default  reduce using rule 29 (CallStmt)


state 88

   33 Args: Args ',' Arg .
   35 Arg: Arg . '=' Expr

    '='  shift, and go to state 82

    $default  reduce using rule 33 (Args)


state 89

   18 NewLines: NewLines . T_EOL
   20 EmptyOrNewLines: NewLines .

    T_EOL  shift, and go to state 46

    $default  reduce using rule 20 (EmptyOrNewLines)


state 90

   36 FuncDecl: T_Func T_Identifier '(' Args ')' EmptyOrNewLines . Closure

    '{'  shift, and go to state 55

    Closure  go to state 92


state 91

   35 Arg: Arg '=' Expr .
   47 IntervalExpr: Expr . T_IntervalTo Expr
   48             | Expr . T_IntervalLess Expr

    T_IntervalTo    shift, and go to state 53
    T_IntervalLess  shift, and go to state 54

    $default  reduce using rule 35 (Arg)


state 92

   36 FuncDecl: T_Func T_Identifier '(' Args ')' EmptyOrNewLines Closure .

    $default  reduce using rule 36 (FuncDecl)

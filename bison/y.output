Terminals which are not used

   T_Int
   T_Void
   T_Return
   T_Print
   T_ReadInt
   T_Le
   T_Ge
   T_Eq
   T_Ne
   T_And
   T_Or
   T_StringConstant
   '<'
   '>'
   '+'
   '-'
   '*'
   '/'
   '%'
   '!'


Rules never reduced

    2 Program: Stmt


State 13 conflicts: 2 reduce/reduce
State 15 conflicts: 1 shift/reduce
State 52 conflicts: 1 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: /* empty */
    2        | Stmt
    3        | Stmt Program

    4 Stmt: StmtSeparator
    5     | VarDecl StmtSeparator
    6     | FuncDecl
    7     | AssignStmt StmtSeparator
    8     | Expr
    9     | IfStmt
   10     | WhileStmt
   11     | BreakStmt StmtSeparator
   12     | ContinueStmt StmtSeparator
   13     | CallStmt

   14 StmtSeparator: ';'
   15              | NewLines

   16 NewLines: T_EOL
   17         | NewLines T_EOL

   18 EmptyOrNewLines: /* empty */
   19                | NewLines

   20 Closure: '{' Program '}'

   21 EmptyOrClosure: /* empty */
   22               | Closure

   23 ActualParams: /* empty */
   24             | ActualParam
   25             | ActualParams ',' ActualParam

   26 ActualParam: Expr
   27            | T_Identifier ':' Expr

   28 CallStmt: T_Identifier '(' ActualParams ')' EmptyOrClosure

   29 Args: /* empty */
   30     | Arg
   31     | Args ',' Arg

   32 Arg: T_Identifier
   33    | Arg '=' Expr

   34 FuncDecl: T_Func T_Identifier '(' Args ')' EmptyOrNewLines Closure

   35 BreakStmt: T_Break

   36 ContinueStmt: T_Continue

   37 WhileStmt: T_While Expr Closure

   38 IfStmt: T_If Expr Closure
   39       | IfStmt T_Else Closure
   40       | IfStmt T_Else IfStmt

   41 VarDecl: T_Var T_Identifier
   42        | T_Let T_Identifier
   43        | VarDecl '=' Expr

   44 AssignStmt: T_Identifier '=' Expr

   45 Expr: T_IntConstant
   46     | T_Identifier


Terminals, with rules where they appear

$end (0) 0
'!' (33)
'%' (37)
'(' (40) 28 34
')' (41) 28 34
'*' (42)
'+' (43)
',' (44) 25 31
'-' (45)
'/' (47)
':' (58) 27
';' (59) 14
'<' (60)
'=' (61) 33 43 44
'>' (62)
'{' (123) 20
'}' (125) 20
error (256)
T_Int (258)
T_Var (259) 41
T_Void (260)
T_Return (261)
T_Print (262)
T_ReadInt (263)
T_While (264) 37
T_EOL (265) 16 17
T_Let (266) 42
T_Func (267) 34
T_If (268) 38
T_Else (269) 39 40
T_Break (270) 35
T_Continue (271) 36
T_Le (272)
T_Ge (273)
T_Eq (274)
T_Ne (275)
T_And (276)
T_Or (277)
T_IntConstant (278) 45
T_StringConstant (279)
T_Identifier (280) 27 28 32 34 41 42 44 46


Nonterminals, with rules where they appear

$accept (42)
    on left: 0
Program (43)
    on left: 1 2 3, on right: 0 3 20
Stmt (44)
    on left: 4 5 6 7 8 9 10 11 12 13, on right: 2 3
StmtSeparator (45)
    on left: 14 15, on right: 4 5 7 11 12
NewLines (46)
    on left: 16 17, on right: 15 17 19
EmptyOrNewLines (47)
    on left: 18 19, on right: 34
Closure (48)
    on left: 20, on right: 22 34 37 38 39
EmptyOrClosure (49)
    on left: 21 22, on right: 28
ActualParams (50)
    on left: 23 24 25, on right: 25 28
ActualParam (51)
    on left: 26 27, on right: 24 25
CallStmt (52)
    on left: 28, on right: 13
Args (53)
    on left: 29 30 31, on right: 31 34
Arg (54)
    on left: 32 33, on right: 30 31 33
FuncDecl (55)
    on left: 34, on right: 6
BreakStmt (56)
    on left: 35, on right: 11
ContinueStmt (57)
    on left: 36, on right: 12
WhileStmt (58)
    on left: 37, on right: 10
IfStmt (59)
    on left: 38 39 40, on right: 9 39 40
VarDecl (60)
    on left: 41 42 43, on right: 5 43
AssignStmt (61)
    on left: 44, on right: 7
Expr (62)
    on left: 45 46, on right: 8 26 27 33 37 38 43 44


state 0

    0 $accept: . Program $end

    T_Var          shift, and go to state 1
    T_While        shift, and go to state 2
    T_EOL          shift, and go to state 3
    T_Let          shift, and go to state 4
    T_Func         shift, and go to state 5
    T_If           shift, and go to state 6
    T_Break        shift, and go to state 7
    T_Continue     shift, and go to state 8
    T_IntConstant  shift, and go to state 9
    T_Identifier   shift, and go to state 10
    ';'            shift, and go to state 11

    $default  reduce using rule 1 (Program)

    Program        go to state 12
    Stmt           go to state 13
    StmtSeparator  go to state 14
    NewLines       go to state 15
    CallStmt       go to state 16
    FuncDecl       go to state 17
    BreakStmt      go to state 18
    ContinueStmt   go to state 19
    WhileStmt      go to state 20
    IfStmt         go to state 21
    VarDecl        go to state 22
    AssignStmt     go to state 23
    Expr           go to state 24


state 1

   41 VarDecl: T_Var . T_Identifier

    T_Identifier  shift, and go to state 25


state 2

   37 WhileStmt: T_While . Expr Closure

    T_IntConstant  shift, and go to state 9
    T_Identifier   shift, and go to state 26

    Expr  go to state 27


state 3

   16 NewLines: T_EOL .

    $default  reduce using rule 16 (NewLines)


state 4

   42 VarDecl: T_Let . T_Identifier

    T_Identifier  shift, and go to state 28


state 5

   34 FuncDecl: T_Func . T_Identifier '(' Args ')' EmptyOrNewLines Closure

    T_Identifier  shift, and go to state 29


state 6

   38 IfStmt: T_If . Expr Closure

    T_IntConstant  shift, and go to state 9
    T_Identifier   shift, and go to state 26

    Expr  go to state 30


state 7

   35 BreakStmt: T_Break .

    $default  reduce using rule 35 (BreakStmt)


state 8

   36 ContinueStmt: T_Continue .

    $default  reduce using rule 36 (ContinueStmt)


state 9

   45 Expr: T_IntConstant .

    $default  reduce using rule 45 (Expr)


state 10

   28 CallStmt: T_Identifier . '(' ActualParams ')' EmptyOrClosure
   44 AssignStmt: T_Identifier . '=' Expr
   46 Expr: T_Identifier .

    '='  shift, and go to state 31
    '('  shift, and go to state 32

    $default  reduce using rule 46 (Expr)


state 11

   14 StmtSeparator: ';' .

    $default  reduce using rule 14 (StmtSeparator)


state 12

    0 $accept: Program . $end

    $end  shift, and go to state 33


state 13

    2 Program: Stmt .
    3        | Stmt . Program

    T_Var          shift, and go to state 1
    T_While        shift, and go to state 2
    T_EOL          shift, and go to state 3
    T_Let          shift, and go to state 4
    T_Func         shift, and go to state 5
    T_If           shift, and go to state 6
    T_Break        shift, and go to state 7
    T_Continue     shift, and go to state 8
    T_IntConstant  shift, and go to state 9
    T_Identifier   shift, and go to state 10
    ';'            shift, and go to state 11

    $end      reduce using rule 1 (Program)
    $end      [reduce using rule 2 (Program)]
    '}'       reduce using rule 1 (Program)
    '}'       [reduce using rule 2 (Program)]
    $default  reduce using rule 1 (Program)

    Program        go to state 34
    Stmt           go to state 13
    StmtSeparator  go to state 14
    NewLines       go to state 15
    CallStmt       go to state 16
    FuncDecl       go to state 17
    BreakStmt      go to state 18
    ContinueStmt   go to state 19
    WhileStmt      go to state 20
    IfStmt         go to state 21
    VarDecl        go to state 22
    AssignStmt     go to state 23
    Expr           go to state 24


state 14

    4 Stmt: StmtSeparator .

    $default  reduce using rule 4 (Stmt)


state 15

   15 StmtSeparator: NewLines .
   17 NewLines: NewLines . T_EOL

    T_EOL  shift, and go to state 35

    T_EOL     [reduce using rule 15 (StmtSeparator)]
    $default  reduce using rule 15 (StmtSeparator)


state 16

   13 Stmt: CallStmt .

    $default  reduce using rule 13 (Stmt)


state 17

    6 Stmt: FuncDecl .

    $default  reduce using rule 6 (Stmt)


state 18

   11 Stmt: BreakStmt . StmtSeparator

    T_EOL  shift, and go to state 3
    ';'    shift, and go to state 11

    StmtSeparator  go to state 36
    NewLines       go to state 15


state 19

   12 Stmt: ContinueStmt . StmtSeparator

    T_EOL  shift, and go to state 3
    ';'    shift, and go to state 11

    StmtSeparator  go to state 37
    NewLines       go to state 15


state 20

   10 Stmt: WhileStmt .

    $default  reduce using rule 10 (Stmt)


state 21

    9 Stmt: IfStmt .
   39 IfStmt: IfStmt . T_Else Closure
   40       | IfStmt . T_Else IfStmt

    T_Else  shift, and go to state 38

    $default  reduce using rule 9 (Stmt)


state 22

    5 Stmt: VarDecl . StmtSeparator
   43 VarDecl: VarDecl . '=' Expr

    T_EOL  shift, and go to state 3
    '='    shift, and go to state 39
    ';'    shift, and go to state 11

    StmtSeparator  go to state 40
    NewLines       go to state 15


state 23

    7 Stmt: AssignStmt . StmtSeparator

    T_EOL  shift, and go to state 3
    ';'    shift, and go to state 11

    StmtSeparator  go to state 41
    NewLines       go to state 15


state 24

    8 Stmt: Expr .

    $default  reduce using rule 8 (Stmt)


state 25

   41 VarDecl: T_Var T_Identifier .

    $default  reduce using rule 41 (VarDecl)


state 26

   46 Expr: T_Identifier .

    $default  reduce using rule 46 (Expr)


state 27

   37 WhileStmt: T_While Expr . Closure

    '{'  shift, and go to state 42

    Closure  go to state 43


state 28

   42 VarDecl: T_Let T_Identifier .

    $default  reduce using rule 42 (VarDecl)


state 29

   34 FuncDecl: T_Func T_Identifier . '(' Args ')' EmptyOrNewLines Closure

    '('  shift, and go to state 44


state 30

   38 IfStmt: T_If Expr . Closure

    '{'  shift, and go to state 42

    Closure  go to state 45


state 31

   44 AssignStmt: T_Identifier '=' . Expr

    T_IntConstant  shift, and go to state 9
    T_Identifier   shift, and go to state 26

    Expr  go to state 46


state 32

   28 CallStmt: T_Identifier '(' . ActualParams ')' EmptyOrClosure

    T_IntConstant  shift, and go to state 9
    T_Identifier   shift, and go to state 47

    $default  reduce using rule 23 (ActualParams)

    ActualParams  go to state 48
    ActualParam   go to state 49
    Expr          go to state 50


state 33

    0 $accept: Program $end .

    $default  accept


state 34

    3 Program: Stmt Program .

    $default  reduce using rule 3 (Program)


state 35

   17 NewLines: NewLines T_EOL .

    $default  reduce using rule 17 (NewLines)


state 36

   11 Stmt: BreakStmt StmtSeparator .

    $default  reduce using rule 11 (Stmt)


state 37

   12 Stmt: ContinueStmt StmtSeparator .

    $default  reduce using rule 12 (Stmt)


state 38

   39 IfStmt: IfStmt T_Else . Closure
   40       | IfStmt T_Else . IfStmt

    T_If  shift, and go to state 6
    '{'   shift, and go to state 42

    Closure  go to state 51
    IfStmt   go to state 52


state 39

   43 VarDecl: VarDecl '=' . Expr

    T_IntConstant  shift, and go to state 9
    T_Identifier   shift, and go to state 26

    Expr  go to state 53


state 40

    5 Stmt: VarDecl StmtSeparator .

    $default  reduce using rule 5 (Stmt)


state 41

    7 Stmt: AssignStmt StmtSeparator .

    $default  reduce using rule 7 (Stmt)


state 42

   20 Closure: '{' . Program '}'

    T_Var          shift, and go to state 1
    T_While        shift, and go to state 2
    T_EOL          shift, and go to state 3
    T_Let          shift, and go to state 4
    T_Func         shift, and go to state 5
    T_If           shift, and go to state 6
    T_Break        shift, and go to state 7
    T_Continue     shift, and go to state 8
    T_IntConstant  shift, and go to state 9
    T_Identifier   shift, and go to state 10
    ';'            shift, and go to state 11

    $default  reduce using rule 1 (Program)

    Program        go to state 54
    Stmt           go to state 13
    StmtSeparator  go to state 14
    NewLines       go to state 15
    CallStmt       go to state 16
    FuncDecl       go to state 17
    BreakStmt      go to state 18
    ContinueStmt   go to state 19
    WhileStmt      go to state 20
    IfStmt         go to state 21
    VarDecl        go to state 22
    AssignStmt     go to state 23
    Expr           go to state 24


state 43

   37 WhileStmt: T_While Expr Closure .

    $default  reduce using rule 37 (WhileStmt)


state 44

   34 FuncDecl: T_Func T_Identifier '(' . Args ')' EmptyOrNewLines Closure

    T_Identifier  shift, and go to state 55

    $default  reduce using rule 29 (Args)

    Args  go to state 56
    Arg   go to state 57


state 45

   38 IfStmt: T_If Expr Closure .

    $default  reduce using rule 38 (IfStmt)


state 46

   44 AssignStmt: T_Identifier '=' Expr .

    $default  reduce using rule 44 (AssignStmt)


state 47

   27 ActualParam: T_Identifier . ':' Expr
   46 Expr: T_Identifier .

    ':'  shift, and go to state 58

    $default  reduce using rule 46 (Expr)


state 48

   25 ActualParams: ActualParams . ',' ActualParam
   28 CallStmt: T_Identifier '(' ActualParams . ')' EmptyOrClosure

    ','  shift, and go to state 59
    ')'  shift, and go to state 60


state 49

   24 ActualParams: ActualParam .

    $default  reduce using rule 24 (ActualParams)


state 50

   26 ActualParam: Expr .

    $default  reduce using rule 26 (ActualParam)


state 51

   39 IfStmt: IfStmt T_Else Closure .

    $default  reduce using rule 39 (IfStmt)


state 52

   39 IfStmt: IfStmt . T_Else Closure
   40       | IfStmt . T_Else IfStmt
   40       | IfStmt T_Else IfStmt .

    T_Else  shift, and go to state 38

    T_Else    [reduce using rule 40 (IfStmt)]
    $default  reduce using rule 40 (IfStmt)


state 53

   43 VarDecl: VarDecl '=' Expr .

    $default  reduce using rule 43 (VarDecl)


state 54

   20 Closure: '{' Program . '}'

    '}'  shift, and go to state 61


state 55

   32 Arg: T_Identifier .

    $default  reduce using rule 32 (Arg)


state 56

   31 Args: Args . ',' Arg
   34 FuncDecl: T_Func T_Identifier '(' Args . ')' EmptyOrNewLines Closure

    ','  shift, and go to state 62
    ')'  shift, and go to state 63


state 57

   30 Args: Arg .
   33 Arg: Arg . '=' Expr

    '='  shift, and go to state 64

    $default  reduce using rule 30 (Args)


state 58

   27 ActualParam: T_Identifier ':' . Expr

    T_IntConstant  shift, and go to state 9
    T_Identifier   shift, and go to state 26

    Expr  go to state 65


state 59

   25 ActualParams: ActualParams ',' . ActualParam

    T_IntConstant  shift, and go to state 9
    T_Identifier   shift, and go to state 47

    ActualParam  go to state 66
    Expr         go to state 50


state 60

   28 CallStmt: T_Identifier '(' ActualParams ')' . EmptyOrClosure

    '{'  shift, and go to state 42

    $default  reduce using rule 21 (EmptyOrClosure)

    Closure         go to state 67
    EmptyOrClosure  go to state 68


state 61

   20 Closure: '{' Program '}' .

    $default  reduce using rule 20 (Closure)


state 62

   31 Args: Args ',' . Arg

    T_Identifier  shift, and go to state 55

    Arg  go to state 69


state 63

   34 FuncDecl: T_Func T_Identifier '(' Args ')' . EmptyOrNewLines Closure

    T_EOL  shift, and go to state 3

    $default  reduce using rule 18 (EmptyOrNewLines)

    NewLines         go to state 70
    EmptyOrNewLines  go to state 71


state 64

   33 Arg: Arg '=' . Expr

    T_IntConstant  shift, and go to state 9
    T_Identifier   shift, and go to state 26

    Expr  go to state 72


state 65

   27 ActualParam: T_Identifier ':' Expr .

    $default  reduce using rule 27 (ActualParam)


state 66

   25 ActualParams: ActualParams ',' ActualParam .

    $default  reduce using rule 25 (ActualParams)


state 67

   22 EmptyOrClosure: Closure .

    $default  reduce using rule 22 (EmptyOrClosure)


state 68

   28 CallStmt: T_Identifier '(' ActualParams ')' EmptyOrClosure .

    $default  reduce using rule 28 (CallStmt)


state 69

   31 Args: Args ',' Arg .
   33 Arg: Arg . '=' Expr

    '='  shift, and go to state 64

    $default  reduce using rule 31 (Args)


state 70

   17 NewLines: NewLines . T_EOL
   19 EmptyOrNewLines: NewLines .

    T_EOL  shift, and go to state 35

    $default  reduce using rule 19 (EmptyOrNewLines)


state 71

   34 FuncDecl: T_Func T_Identifier '(' Args ')' EmptyOrNewLines . Closure

    '{'  shift, and go to state 42

    Closure  go to state 73


state 72

   33 Arg: Arg '=' Expr .

    $default  reduce using rule 33 (Arg)


state 73

   34 FuncDecl: T_Func T_Identifier '(' Args ')' EmptyOrNewLines Closure .

    $default  reduce using rule 34 (FuncDecl)
